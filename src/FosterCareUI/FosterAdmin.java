/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FosterCareUI;

import CWSUtilities.Constants;
import CWSUtilities.DatabaseConnection;
import CWSUtilities.Validate;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelFoster.PersonFoster;

/**
 *
 * @author anirudhajoshi
 */
public class FosterAdmin extends javax.swing.JFrame {

    /**
     * Creates new form LegalAdmin
     */
    public FosterAdmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        usernameLbl = new javax.swing.JLabel();
        passwordLbl = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JPasswordField();
        roleLbl = new javax.swing.JLabel();
        roleDrpdn = new javax.swing.JComboBox<>();
        firstnameLbl = new javax.swing.JLabel();
        firstnameTxt = new javax.swing.JTextField();
        lastnameLbl = new javax.swing.JLabel();
        lastnameTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        emailidLbl = new javax.swing.JLabel();
        mobileLbl = new javax.swing.JLabel();
        emailidTxt = new javax.swing.JTextField();
        mobileTxt = new javax.swing.JTextField();
        addressLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTxt = new javax.swing.JTextArea();
        cityLbl = new javax.swing.JLabel();
        cityDrpdn = new javax.swing.JComboBox<>();
        stateLbl = new javax.swing.JLabel();
        stateDrpdn = new javax.swing.JComboBox<>();
        zipcodeLbl = new javax.swing.JLabel();
        zipcodeTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        fosteradminJTable = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("FOSTER ADMIN");

        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(backBtn)
                .addGap(185, 185, 185)
                .addComponent(jLabel1)
                .addContainerGap(430, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backBtn))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        usernameLbl.setText("Username:");

        passwordLbl.setText("Password:");

        roleLbl.setText("Role:");

        roleDrpdn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adoption Family", "Adoption Officer", "Foster Officer" }));

        firstnameLbl.setText("First Name:");

        lastnameLbl.setText("Last Name:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastnameLbl)
                    .addComponent(firstnameLbl)
                    .addComponent(roleLbl)
                    .addComponent(passwordLbl)
                    .addComponent(usernameLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameTxt)
                    .addComponent(passwordTxt)
                    .addComponent(firstnameTxt)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(roleDrpdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 163, Short.MAX_VALUE))
                    .addComponent(lastnameTxt))
                .addGap(62, 62, 62))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleLbl)
                    .addComponent(roleDrpdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLbl))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLbl))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstnameLbl))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastnameLbl)
                    .addComponent(lastnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));

        emailidLbl.setText("EmailID:");

        mobileLbl.setText("Mobile:");

        addressLbl.setText("Address:");

        addressTxt.setColumns(20);
        addressTxt.setRows(5);
        jScrollPane1.setViewportView(addressTxt);

        cityLbl.setText("City:");

        stateLbl.setText("State:");

        stateDrpdn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Massachusetts", "New York", "Connecticut" }));
        stateDrpdn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateDrpdnItemStateChanged(evt);
            }
        });
        stateDrpdn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateDrpdnActionPerformed(evt);
            }
        });

        zipcodeLbl.setText("Zip Code:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(zipcodeLbl)
                    .addComponent(addressLbl)
                    .addComponent(mobileLbl)
                    .addComponent(emailidLbl)
                    .addComponent(stateLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emailidTxt)
                    .addComponent(mobileTxt)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(stateDrpdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cityLbl)
                        .addGap(18, 18, 18)
                        .addComponent(cityDrpdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(zipcodeTxt))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailidLbl)
                    .addComponent(emailidTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileLbl)
                    .addComponent(mobileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addressLbl)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLbl)
                    .addComponent(cityDrpdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateLbl)
                    .addComponent(stateDrpdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipcodeLbl)
                    .addComponent(zipcodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));

        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        resetBtn.setText("RESET");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        fosteradminJTable.setBackground(new java.awt.Color(255, 226, 249));
        fosteradminJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Role", "Username", "Password", "First Name", "Last Name", "EmailID", "Mobile", "Address", "State", "City", "Zip Code"
            }
        ));
        fosteradminJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fosteradminJTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(fosteradminJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 888, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        LoginPage lpjframe = new LoginPage();
        lpjframe.setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void stateDrpdnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateDrpdnItemStateChanged
        // TODO add your handling code here:
        String state  = stateDrpdn.getSelectedItem().toString();
        
        switch (state) {
            case "Massachusetts":
                cityDrpdn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "Springfield"}));
                break;
            case "New York":
                cityDrpdn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New York", "Albany"}));
                break;
            case "Connecticut":
                cityDrpdn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hartford", "Stamford"}));
                break;
            default:
                break;
        }
    }//GEN-LAST:event_stateDrpdnItemStateChanged

    private void stateDrpdnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateDrpdnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateDrpdnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        String role = roleDrpdn.getSelectedItem().toString();
        String username = usernameTxt.getText();
        String password = passwordTxt.getText();
        String firstname = firstnameTxt.getText();
        String lastname = lastnameTxt.getText();
        String emailid = emailidTxt.getText();
        Long mobile = Validate.ConvertIntoLong(mobileTxt.getText());
        String address = addressTxt.getText();
        String state = stateDrpdn.getSelectedItem().toString();
        String city = cityDrpdn.getSelectedItem().toString();
        int zipCode = Integer.valueOf(zipcodeTxt.getText());
        Long check = mobile;
        Integer checkZip = zipCode;
        
        if (emailid.isEmpty()|| firstname.isEmpty()||lastname.isEmpty()||address.isEmpty()||city.isEmpty()||state.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter all the Fields", "Try Again",JOptionPane.ERROR_MESSAGE);
        }else if (Validate.isValidEmail(emailid) == false){
             JOptionPane.showMessageDialog(this, "Eamil is Inavlid !", "Try Again",JOptionPane.ERROR_MESSAGE);
        }else if (Validate.isValidPassword(password) == false){
             JOptionPane.showMessageDialog(this, "Password is Inavlid !", "Try Again",JOptionPane.ERROR_MESSAGE);
        }else if (Long.toString(check).length()<10 || Long.toString(check).length()>10){
             JOptionPane.showMessageDialog(this, "MobileNo. is Invalid. Check the no. of Digits !", "Try Again",JOptionPane.ERROR_MESSAGE);
        }else if (Long.toString(checkZip).length()<5 || Long.toString(checkZip).length()>5){
             JOptionPane.showMessageDialog(this, "Zipcode is Invalid. Check the no. of Digits !", "Try Again",JOptionPane.ERROR_MESSAGE);
        }
        
        DefaultTableModel adminfoster = (DefaultTableModel) fosteradminJTable.getModel() ;
        
        
        adminfoster.addRow(new Object[] {role, username, password, firstname, lastname, emailid, mobile, address, state, city, zipCode});
        
        
        JOptionPane.showMessageDialog(this, "Data Added Successfully !");
        
        PersonFoster person1 = new PersonFoster(firstname,lastname,emailid,mobile,address,city,zipCode,state,username,password,role);
        try{
                    DatabaseConnection.storeDataPersonFoster(person1);
        }
        catch(Exception e){
                    System.out.println("Error while Connecting");
                    e.printStackTrace();
                }
        
        usernameTxt.setText("");
        passwordTxt.setText("");
        firstnameTxt.setText("");
        lastnameTxt.setText("");
        emailidTxt.setText("");
        mobileTxt.setText("");
        addressTxt.setText("");
        zipcodeTxt.setText("");
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
//         String role = roleDrpdn.getSelectedItem().toString();
//        String username = usernameTxt.getText();
//        String password = passwordTxt.getText();
//        String firstname = firstnameTxt.getText();
//        String lastname = lastnameTxt.getText();
//        String emailid = emailidTxt.getText();
//        int mobile = Integer.valueOf(mobileTxt.getText());
//        String address = addressTxt.getText();
//        String state = stateDrpdn.getSelectedItem().toString();
//        String city = cityDrpdn.getSelectedItem().toString();
//        int zipcode = Integer.valueOf(zipcodeTxt.getText());
//        
//        
//        DefaultTableModel adminfoster = (DefaultTableModel) fosteradminJTable.getModel() ;
//        
//        if(fosteradminJTable.getSelectedRowCount()==1){
//            try{
//            
//                DatabaseConnection.getDeletePersonFoster(username, true);
//           
//            }catch(Exception e){
//                System.out.println("Error while Connecting");
//                e.printStackTrace();
//            }
//            adminfoster.removeRow(fosteradminJTable.getSelectedRow());
//            
//            JOptionPane.showMessageDialog(this, "Data Deleted Successfully !");
//        }
//        else{
//         if(fosteradminJTable.getSelectedRowCount()==0){
//            
//             JOptionPane.showMessageDialog(this, "Please select a single row !");
//         
//         }
//        }
        int tuple = fosteradminJTable.getSelectedRow();
        if (tuple<0){
            JOptionPane.showMessageDialog(this, "Please select a Row!","Select Row",JOptionPane.ERROR_MESSAGE);
        }else{
            String username = usernameTxt.getText();
            try{
            
                DatabaseConnection.getDeletePersonFoster(username, true);
           
            }catch(Exception e){
                System.out.println("Error while Connecting");
                e.printStackTrace();
            }
            DefaultTableModel personTable = (DefaultTableModel) fosteradminJTable.getModel();
            personTable.removeRow(tuple);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void fosteradminJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fosteradminJTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel adminfoster = (DefaultTableModel) fosteradminJTable.getModel() ;
        
        String settextRole = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 0).toString();
        String settextUsername = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 1).toString();
        String settextPassword = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 2).toString();
        String settextFirstname = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 3).toString();
        String settextLastname = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 4).toString();
        String settextEmailid = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 5).toString();
        String settextMobile = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 6).toString();
        String settextAddress = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 7).toString();
        String settextState = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 8).toString();
        String settextCity = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 9).toString();
        String settextZipcode = adminfoster.getValueAt(fosteradminJTable.getSelectedRow(), 10).toString();
        
        roleDrpdn.setSelectedItem(settextRole);
        usernameTxt.setText(settextUsername);
        passwordTxt.setText(settextPassword);
        firstnameTxt.setText(settextFirstname);
        lastnameTxt.setText(settextLastname);
        emailidTxt.setText(settextEmailid);
        mobileTxt.setText(settextMobile);
        addressTxt.setText(settextAddress);
        stateDrpdn.setSelectedItem(settextState);
        cityDrpdn.setSelectedItem(settextCity);
        zipcodeTxt.setText(settextZipcode);
    }//GEN-LAST:event_fosteradminJTableMouseClicked

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        String role = roleDrpdn.getSelectedItem().toString();
        String username = usernameTxt.getText();
        String password = passwordTxt.getText();
        String firstname = firstnameTxt.getText();
        String lastname = lastnameTxt.getText();
        String emailid = emailidTxt.getText();
        int mobile = Integer.valueOf(mobileTxt.getText());
        String address = addressTxt.getText();
        String state = stateDrpdn.getSelectedItem().toString();
        String city = cityDrpdn.getSelectedItem().toString();
        int zipcode = Integer.valueOf(zipcodeTxt.getText());
        
        usernameTxt.setText("");
        passwordTxt.setText("");
        firstnameTxt.setText("");
        lastnameTxt.setText("");
        emailidTxt.setText("");
        mobileTxt.setText("");
        addressTxt.setText("");
        zipcodeTxt.setText("");
        
        JOptionPane.showMessageDialog(this, "Data Resetted Successfully !");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        String role = roleDrpdn.getSelectedItem().toString();
        String username = usernameTxt.getText();
        String password = passwordTxt.getText();
        String firstname = firstnameTxt.getText();
        String lastname = lastnameTxt.getText();
        String emailid = emailidTxt.getText();
        int mobile = Integer.valueOf(mobileTxt.getText());
        String address = addressTxt.getText();
        String state = stateDrpdn.getSelectedItem().toString();
        String city = cityDrpdn.getSelectedItem().toString();
        int zipCode = Integer.valueOf(zipcodeTxt.getText());
        
        PersonFoster personf1 = new PersonFoster(firstname,lastname,emailid,mobile,address,city,zipCode,state,username,password,role);
        try{
                    DatabaseConnection.updatePersonFoster(personf1);
                }catch(Exception e){
                    System.out.println("Error while Connecting");
                    e.printStackTrace();
                }
        DefaultTableModel adminfoster = (DefaultTableModel) fosteradminJTable.getModel() ;
        
        adminfoster.setValueAt(role, fosteradminJTable.getSelectedRow(), 0);
        adminfoster.setValueAt(username, fosteradminJTable.getSelectedRow(), 1);
        adminfoster.setValueAt(password, fosteradminJTable.getSelectedRow(), 2);
        adminfoster.setValueAt(firstname, fosteradminJTable.getSelectedRow(), 3);
        adminfoster.setValueAt(lastname, fosteradminJTable.getSelectedRow(), 4);
        adminfoster.setValueAt(emailid, fosteradminJTable.getSelectedRow(), 5);
        adminfoster.setValueAt(mobile, fosteradminJTable.getSelectedRow(), 6);
        adminfoster.setValueAt(address, fosteradminJTable.getSelectedRow(), 7);
        adminfoster.setValueAt(state, fosteradminJTable.getSelectedRow(), 8);
        adminfoster.setValueAt(city, fosteradminJTable.getSelectedRow(), 9);
        adminfoster.setValueAt(zipCode, fosteradminJTable.getSelectedRow(), 10);
        
        usernameTxt.setText("");
        passwordTxt.setText("");
        firstnameTxt.setText("");
        lastnameTxt.setText("");
        emailidTxt.setText("");
        mobileTxt.setText("");
        addressTxt.setText("");
        zipcodeTxt.setText("");
        
        JOptionPane.showMessageDialog(this, "Data Updated Successfully !");
    }//GEN-LAST:event_updateBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        DefaultTableModel personTable = (DefaultTableModel) fosteradminJTable.getModel();
       ResultSet resultSet = null;
        try{
            
            resultSet = DatabaseConnection.getData(Constants.FosterPerson, false);
            while (resultSet.next()){
                String firstname = resultSet.getString(1);
                String lastname = resultSet.getString(2);
                String emailid = resultSet.getString(3);
                String mobile = resultSet.getString(4);
                String address = resultSet.getString(5);
                String city = resultSet.getString(6);
                String zipCode = resultSet.getString(7);
                String state = resultSet.getString(8);
                
                String username = resultSet.getString(9);
                String password = resultSet.getString(10);
                String role = resultSet.getString(11);
                    
                       
                    personTable.addRow(new Object[]{role, username, password, firstname, lastname, emailid, mobile, address, state, city, zipCode});
                
                }
            }catch(Exception e){
                System.out.println("Error while Connecting");
                e.printStackTrace();
            }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FosterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FosterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FosterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FosterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FosterAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel addressLbl;
    private javax.swing.JTextArea addressTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> cityDrpdn;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel emailidLbl;
    private javax.swing.JTextField emailidTxt;
    private javax.swing.JLabel firstnameLbl;
    private javax.swing.JTextField firstnameTxt;
    private javax.swing.JTable fosteradminJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lastnameLbl;
    private javax.swing.JTextField lastnameTxt;
    private javax.swing.JLabel mobileLbl;
    private javax.swing.JTextField mobileTxt;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JButton resetBtn;
    private javax.swing.JComboBox<String> roleDrpdn;
    private javax.swing.JLabel roleLbl;
    private javax.swing.JComboBox<String> stateDrpdn;
    private javax.swing.JLabel stateLbl;
    private javax.swing.JButton updateBtn;
    private javax.swing.JLabel usernameLbl;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JLabel zipcodeLbl;
    private javax.swing.JTextField zipcodeTxt;
    // End of variables declaration//GEN-END:variables
}
